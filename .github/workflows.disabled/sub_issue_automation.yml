name: Sub Issue自動管理システム

on:
  workflow_dispatch:  # 手動実行も可能
  issues:
    types: [closed, opened, edited, labeled, unlabeled]
  issue_comment:
    types: [created, edited]
  pull_request:
    types: [closed, merged]
  schedule:
    - cron: '0 */6 * * *'  # 6時間毎の定期チェック

permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  auto_progress_update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 🧙‍♂️ 4賢者システム統合
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const comment = context.payload.comment;
            const pr = context.payload.pull_request;

            // Sub Issue完了時の自動処理
            if (context.eventName === 'issues' && context.payload.action === 'closed') {
              // 4賢者システムのラベルをチェック
              const sageLabels = ['knowledge-sage', 'task-sage', 'incident-sage', 'rag-sage'];
              const hasSageLabel = issue.labels.some(label =>
                sageLabels.includes(label.name.toLowerCase())
              );

              if (hasSageLabel) {
                console.log(`🎉 ${issue.title} 完了 - Master Issue進捗更新中...`);

                // Master Issueを検索（Parent Issue）
                const issues = await github.rest.issues.listForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: 'open',
                  labels: 'epic'
                });

                // Master Issueに進捗更新コメントを追加
                for (const masterIssue of issues.data) {
                  if (masterIssue.body.includes('エルダーズギルド統合計画')) {
                    await github.rest.issues.createComment({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: masterIssue.number,
                      body: `🎉 **Sub Issue完了通知**

                      ✅ #${issue.number} - ${issue.title}

                      ## 📊 自動進捗更新
                      Sub Issue完了により全体進捗が更新されました。

                      🤖 Automated by Elder Flow GitHub Actions`
                    });
                  }
                }
              }
            }

            // 進捗コメント自動分析
            if (context.eventName === 'issue_comment' && context.payload.action === 'created') {
              const commentBody = comment.body;

              // 進捗キーワードを検出
              const progressKeywords = ['完了', '進行中', '開始', '完了率', '%', 'done', 'progress', 'complete'];
              const hasProgress = progressKeywords.some(keyword =>
                commentBody.toLowerCase().includes(keyword.toLowerCase())
              );

              if (hasProgress) {
                console.log(`📈 進捗更新検知: Issue #${issue.number}`);

                // 進捗データを抽出してラベル更新
                if (commentBody.includes('完了')) {
                  await github.rest.issues.addLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    labels: ['status:completed']
                  });
                } else if (commentBody.includes('進行中')) {
                  await github.rest.issues.addLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    labels: ['status:in-progress']
                  });
                }
              }
            }

            // PR マージ時の関連Issue自動クローズ
            if (context.eventName === 'pull_request' && pr.merged) {
              const prBody = pr.body || '';

              // Issue参照パターンを検出 (closes #123, fixes #456, resolves #789)
              const issuePattern = /(closes?|fix(?:es)?|resolv(?:es)?)\s*#(\d+)/gi;
              const matches = [...prBody.matchAll(issuePattern)];

              for (const match of matches) {
                const issueNumber = parseInt(match[2]);
                console.log(`🔧 PR #${pr.number} マージによりIssue #${issueNumber} を自動クローズ`);

                try {
                  // Issueをクローズ
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    state: 'closed',
                    state_reason: 'completed'
                  });

                  // 完了コメント追加
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    body: `✅ **自動クローズ**\n\nPR #${pr.number} のマージにより、このIssueは自動的にクローズされました。\n\n🤖 Automated by Elders Guild Issue Management System`
                  });
                } catch (error) {
                  console.error(`Issue #${issueNumber} のクローズに失敗: ${error.message}`);
                }
              }
            }

            // 定期実行時の進捗チェック
            if (context.eventName === 'schedule') {
              console.log('📊 定期進捗チェック実行中...');

              // 全てのオープンIssueを取得
              const openIssues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                per_page: 100
              });

              for (const issue of openIssues.data) {
                // Sub Issueのあるマスターissueを検出
                if (issue.body && issue.body.includes('- [ ]')) {
                  const checklistPattern = /- \[([ x])\]/g;
                  const matches = [...issue.body.matchAll(checklistPattern)];
                  const completed = matches.filter(m => m[1] === 'x').length;
                  const total = matches.length;

                  if (total > 0) {
                    const progress = Math.round((completed / total) * 100);

                    // 進捗ラベルを更新
                    const progressLabel = `progress:${progress}%`;

                    // 既存の進捗ラベルを削除
                    const currentLabels = issue.labels.filter(l => !l.name.startsWith('progress:'));

                    // 新しい進捗ラベルを追加
                    await github.rest.issues.setLabels({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: issue.number,
                      labels: [...currentLabels.map(l => l.name), progressLabel]
                    });

                    console.log(`Issue #${issue.number}: 進捗 ${progress}% 更新完了`);
                  }
                }
              }
            }

      - name: 🔍 Elder Flow連携
        run: |
          echo "🌊 Elder Flow自動化システムと連携中..."
          # Elder Flowシステムに進捗通知
          if [ -f "libs/elder_system/flow/github_integration.py" ]; then
            python3 libs/elder_system/flow/github_integration.py \
              --issue-number="${{ github.event.issue.number }}" \
              --action="${{ github.event.action }}"
          fi
