#!/usr/bin/env python3
"""
AI Company テストカバレッジコマンド
テストカバレッジの確認と可視化を行います
"""

import argparse
import os
import sys
import webbrowser
from pathlib import Path

# プロジェクトルートをPythonパスに追加
sys.path.insert(0, str(Path(__file__).parent.parent))

from scripts.coverage_report import CoverageReporter


def main():
    parser = argparse.ArgumentParser(
        description='AI Company テストカバレッジツール',
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
使用例:
  ai-test-coverage              # カバレッジレポート生成
  ai-test-coverage --html       # HTMLレポートを開く
  ai-test-coverage --watch      # 継続的にカバレッジを監視
  ai-test-coverage --threshold 90  # カバレッジ閾値を設定
        """
    )
    
    parser.add_argument(
        '--html', '-H',
        action='store_true',
        help='HTMLカバレッジレポートをブラウザで開く'
    )
    
    parser.add_argument(
        '--watch', '-w',
        action='store_true',
        help='ファイル変更を監視して自動的にカバレッジを更新'
    )
    
    parser.add_argument(
        '--threshold', '-t',
        type=float,
        default=80.0,
        help='カバレッジの閾値（デフォルト: 80%%）'
    )
    
    parser.add_argument(
        '--path', '-p',
        default='tests/unit',
        help='テスト対象のパス（デフォルト: tests/unit）'
    )
    
    args = parser.parse_args()
    
    reporter = CoverageReporter()
    
    if args.watch:
        print("🔍 ファイル変更を監視中... (Ctrl+Cで終了)")
        try:
            import time
            from watchdog.observers import Observer
            from watchdog.events import FileSystemEventHandler
            
            class TestWatcher(FileSystemEventHandler):
                def on_modified(self, event):
                    if event.src_path.endswith('.py'):
                        print(f"\n📝 変更検出: {event.src_path}")
                        reporter.main()
            
            observer = Observer()
            observer.schedule(TestWatcher(), str(reporter.project_root), recursive=True)
            observer.start()
            
            try:
                while True:
                    time.sleep(1)
            except KeyboardInterrupt:
                observer.stop()
            observer.join()
            
        except ImportError:
            print("❌ watchdogがインストールされていません")
            print("pip install watchdog でインストールしてください")
            sys.exit(1)
    
    else:
        # 通常のカバレッジ実行
        reporter.main()
        
        # HTMLレポートを開く
        if args.html:
            html_path = reporter.htmlcov_dir / "index.html"
            if html_path.exists():
                print(f"\n🌐 ブラウザでレポートを開いています...")
                webbrowser.open(f"file://{html_path}")
            else:
                print("❌ HTMLレポートが見つかりません")


if __name__ == "__main__":
    main()