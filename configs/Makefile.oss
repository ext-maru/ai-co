# Makefile for OSS Migration Project
# Issue #93: OSS移行プロジェクト
# 作成日: 2025年7月19日

.PHONY: help install test docker-up docker-down sonar pytest celery ray clean

# デフォルトタスク
help:
	@echo "OSS移行プロジェクト - 利用可能なコマンド:"
	@echo "  make install       - OSS依存関係をインストール"
	@echo "  make docker-up     - Docker環境を起動"
	@echo "  make docker-down   - Docker環境を停止"
	@echo "  make test          - すべてのテストを実行"
	@echo "  make pytest        - pytestのみ実行"
	@echo "  make celery        - Celeryワーカーを起動"
	@echo "  make ray           - Rayクラスタを起動"
	@echo "  make sonar         - SonarQube解析を実行"
	@echo "  make benchmark     - パフォーマンス比較を実行"
	@echo "  make clean         - 一時ファイルを削除"

# 依存関係インストール
install:
	pip install -r requirements-oss.txt
	pre-commit install

# Docker環境管理
docker-up:
	docker-compose -f docker-compose.oss.yml up -d
	@echo "Waiting for services to be healthy..."
	@sleep 10
	docker-compose -f docker-compose.oss.yml ps

docker-down:
	docker-compose -f docker-compose.oss.yml down -v

docker-logs:
	docker-compose -f docker-compose.oss.yml logs -f

# テスト実行
test: pytest-unit pytest-integration pytest-e2e

pytest-unit:
	pytest tests/unit -v -n auto --cov=libs --cov=workers --cov-report=html

pytest-integration:
	pytest tests/integration -v --tb=short

pytest-e2e:
	pytest tests/e2e -v --tb=short

pytest-poc:
	pytest tests/poc/integration_pytest_poc.py -v

# パフォーマンステスト
benchmark:
	python scripts/compare_test_performance.py

# Celery関連
celery-worker:
	celery -A tasks worker --loglevel=info

celery-beat:
	celery -A tasks beat --loglevel=info

celery-flower:
	celery -A tasks flower --port=5555

# Ray関連
ray-start:
	ray start --head --dashboard-host 0.0.0.0

ray-stop:
	ray stop

ray-status:
	ray status

# SonarQube解析
sonar-scan:
	sonar-scanner -Dproject.settings=sonar-project-oss.properties

sonar-preview:
	sonar-scanner -Dproject.settings=sonar-project-oss.properties -Dsonar.analysis.mode=preview

# 品質チェック
quality-check: lint type-check security-check

lint:
	flake8 libs workers --config=.flake8
	pylint libs workers

type-check:
	mypy libs workers --config-file=mypy.ini

security-check:
	bandit -r libs workers -f json -o bandit-report.json

# カバレッジレポート
coverage-report:
	pytest --cov=libs --cov=workers --cov-report=html --cov-report=xml
	@echo "Coverage report: htmlcov/index.html"

# 移行進捗確認
progress:
	@echo "=== OSS移行進捗 ==="
	@grep "進捗率" docs/OSS_MIGRATION_PROGRESS.md
	@echo ""
	@echo "=== テストカバレッジ ==="
	@pytest --cov=libs --cov=workers --cov-report=term | grep TOTAL || echo "カバレッジ未測定"

# クリーンアップ
clean:
	find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
	find . -type f -name "*.pyc" -delete
	rm -rf .pytest_cache
	rm -rf htmlcov
	rm -rf .coverage
	rm -rf test-results
	rm -f coverage.xml
	rm -f *.log

# 統合実行
all: docker-up install test sonar-scan progress
	@echo "OSS移行タスク完了！"
