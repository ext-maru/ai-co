# Docker Compose for SonarQube
# OSS移行プロジェクト - コードレビューシステム

version: '3.8'

services:
  # SonarQubeサーバー
  sonarqube:
    image: sonarqube:9.9-community
    container_name: ai-co-sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      - sonarqube-db
    networks:
      - sonarnet
    restart: unless-stopped

  # PostgreSQL for SonarQube
  sonarqube-db:
    image: postgres:15-alpine
    container_name: ai-co-sonarqube-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube_db:/var/lib/postgresql/data
    networks:
      - sonarnet
    restart: unless-stopped

  # Redis (Celeryと共用可能)
  redis:
    image: redis:7-alpine
    container_name: ai-co-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sonarnet
    restart: unless-stopped

  # RabbitMQ (Celery用 - オプション)
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: ai-co-rabbitmq
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - sonarnet
    restart: unless-stopped

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  sonarqube_db:
  redis_data:
  rabbitmq_data:

networks:
  sonarnet:
    driver: bridge