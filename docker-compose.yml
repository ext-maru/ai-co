# Elders Guild Project Web Portal
# RAGエルダー推奨Docker統合環境
version: '3.8'

services:
  # PostgreSQL + pgvector データベース
  postgres:
    image: pgvector/pgvector:pg16
    container_name: elders-guild-postgres
    environment:
      POSTGRES_DB: elders_guild
      POSTGRES_USER: elder_admin
      POSTGRES_PASSWORD: sage_wisdom_2025
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "8003:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - elders-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U elder_admin -d elders_guild"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis (バックグラウンドタスク・キャッシュ用)
  redis:
    image: redis:7-alpine
    container_name: elders-guild-redis
    ports:
      - "8004:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - elders-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI バックエンド
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: elders-guild-backend
    environment:
      - DATABASE_URL=postgresql://elder_admin:sage_wisdom_2025@postgres:5432/elders_guild
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONPATH=/app
    ports:
      - "8001:8000"
    volumes:
      - .:/app
      - /app/venv
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - elders-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Next.js フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: elders-guild-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8001
      - NEXT_PUBLIC_WS_URL=ws://localhost:8001
    ports:
      - "8002:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - elders-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx リバースプロキシ
  nginx:
    image: nginx:alpine
    container_name: elders-guild-nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - elders-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  elders-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16