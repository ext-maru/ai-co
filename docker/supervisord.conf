[supervisord]
nodaemon=true
user=elderflow
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
childlogdir=/var/log/supervisor

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

# Nginx
[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/nginx_stdout.log
stderr_logfile=/var/log/supervisor/nginx_stderr.log
stdout_logfile_maxbytes=10MB
stderr_logfile_maxbytes=10MB

# Elder Flow Core API - Multiple instances
[program:elderflow-api-1]
command=python -m uvicorn api.main:app --host 0.0.0.0 --port 8000 --workers 1
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/elderflow_api_1_stdout.log
stderr_logfile=/var/log/supervisor/elderflow_api_1_stderr.log
environment=ELDER_FLOW_ENV="production",INSTANCE_ID="api-1"
user=elderflow

[program:elderflow-api-2]
command=python -m uvicorn api.main:app --host 0.0.0.0 --port 8001 --workers 1
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/elderflow_api_2_stdout.log
stderr_logfile=/var/log/supervisor/elderflow_api_2_stderr.log
environment=ELDER_FLOW_ENV="production",INSTANCE_ID="api-2"
user=elderflow

[program:elderflow-api-3]
command=python -m uvicorn api.main:app --host 0.0.0.0 --port 8002 --workers 1
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/elderflow_api_3_stdout.log
stderr_logfile=/var/log/supervisor/elderflow_api_3_stderr.log
environment=ELDER_FLOW_ENV="production",INSTANCE_ID="api-3"
user=elderflow

# Elder Servant Workers
[program:elder-servant-worker]
command=python -m workers.elder_servant_worker
directory=/app
autostart=true
autorestart=true
numprocs=4
process_name=%(program_name)s_%(process_num)02d
stdout_logfile=/var/log/supervisor/elder_servant_%(process_num)02d_stdout.log
stderr_logfile=/var/log/supervisor/elder_servant_%(process_num)02d_stderr.log
environment=ELDER_FLOW_ENV="production"
user=elderflow

# 4 Sages Workers
[program:knowledge-sage]
command=python -m workers.knowledge_sage_worker
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/knowledge_sage_stdout.log
stderr_logfile=/var/log/supervisor/knowledge_sage_stderr.log
environment=ELDER_FLOW_ENV="production",SAGE_TYPE="knowledge"
user=elderflow

[program:task-sage]
command=python -m workers.task_sage_worker
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/task_sage_stdout.log
stderr_logfile=/var/log/supervisor/task_sage_stderr.log
environment=ELDER_FLOW_ENV="production",SAGE_TYPE="task"
user=elderflow

[program:incident-sage]
command=python -m workers.incident_sage_worker
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/incident_sage_stdout.log
stderr_logfile=/var/log/supervisor/incident_sage_stderr.log
environment=ELDER_FLOW_ENV="production",SAGE_TYPE="incident"
user=elderflow

[program:rag-sage]
command=python -m workers.rag_sage_worker
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/rag_sage_stdout.log
stderr_logfile=/var/log/supervisor/rag_sage_stderr.log
environment=ELDER_FLOW_ENV="production",SAGE_TYPE="rag"
user=elderflow

# Background Tasks Worker
[program:background-worker]
command=celery -A workers.celery_app worker --loglevel=info --concurrency=4
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/celery_worker_stdout.log
stderr_logfile=/var/log/supervisor/celery_worker_stderr.log
environment=ELDER_FLOW_ENV="production"
user=elderflow

# Celery Beat Scheduler
[program:celery-beat]
command=celery -A workers.celery_app beat --loglevel=info
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/celery_beat_stdout.log
stderr_logfile=/var/log/supervisor/celery_beat_stderr.log
environment=ELDER_FLOW_ENV="production"
user=elderflow

# Metrics Exporter
[program:metrics-exporter]
command=python -m monitoring.prometheus_exporter
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/metrics_exporter_stdout.log
stderr_logfile=/var/log/supervisor/metrics_exporter_stderr.log
environment=ELDER_FLOW_ENV="production"
user=elderflow

# Groups for easier management
[group:api]
programs=elderflow-api-1,elderflow-api-2,elderflow-api-3
priority=10

[group:workers]
programs=elder-servant-worker,knowledge-sage,task-sage,incident-sage,rag-sage
priority=20

[group:background]
programs=background-worker,celery-beat
priority=30
