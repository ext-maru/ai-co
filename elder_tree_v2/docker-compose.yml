version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: elder_tree_postgres
    environment:
      POSTGRES_USER: elder_tree
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-elder_tree_secret}
      POSTGRES_DB: elder_tree_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U elder_tree"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - elder_tree_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: elder_tree_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secret}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - elder_tree_network

  # Consul Service Discovery
  consul:
    image: consul:1.17
    container_name: elder_tree_consul
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    volumes:
      - consul_data:/consul/data
    environment:
      CONSUL_BIND_INTERFACE: eth0
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - elder_tree_network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: elder_tree_prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - consul
    networks:
      - elder_tree_network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: elder_tree_grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - elder_tree_network

  # Knowledge Sage
  knowledge_sage:
    build: .
    container_name: knowledge_sage
    command: ["python", "-m", "elder_tree.agents.knowledge_sage"]
    environment:
      - DB_URL=postgresql://elder_tree:${POSTGRES_PASSWORD:-elder_tree_secret}@postgres:5432/elder_tree_db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secret}@redis:6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
    networks:
      - elder_tree_network
    restart: unless-stopped

  # Task Sage
  task_sage:
    build: .
    container_name: task_sage
    command: ["python", "-m", "elder_tree.agents.task_sage"]
    environment:
      - DB_URL=postgresql://elder_tree:${POSTGRES_PASSWORD:-elder_tree_secret}@postgres:5432/elder_tree_db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secret}@redis:6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
    networks:
      - elder_tree_network
    restart: unless-stopped

  # Incident Sage
  incident_sage:
    build: .
    container_name: incident_sage
    command: ["python", "-m", "elder_tree.agents.incident_sage"]
    environment:
      - DB_URL=postgresql://elder_tree:${POSTGRES_PASSWORD:-elder_tree_secret}@postgres:5432/elder_tree_db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secret}@redis:6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
    networks:
      - elder_tree_network
    restart: unless-stopped

  # RAG Sage
  rag_sage:
    build: .
    container_name: rag_sage
    command: ["python", "-m", "elder_tree.agents.rag_sage"]
    environment:
      - DB_URL=postgresql://elder_tree:${POSTGRES_PASSWORD:-elder_tree_secret}@postgres:5432/elder_tree_db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secret}@redis:6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CHROMA_PERSIST_DIR=/app/chroma_db
    volumes:
      - chroma_data:/app/chroma_db
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      consul:
        condition: service_healthy
    networks:
      - elder_tree_network
    restart: unless-stopped

  # Elder Flow Orchestrator
  elder_flow:
    build: .
    container_name: elder_flow
    command: ["python", "-m", "elder_tree.workflows.elder_flow"]
    environment:
      - DB_URL=postgresql://elder_tree:${POSTGRES_PASSWORD:-elder_tree_secret}@postgres:5432/elder_tree_db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secret}@redis:6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    depends_on:
      - knowledge_sage
      - task_sage
      - incident_sage
      - rag_sage
    networks:
      - elder_tree_network
    restart: unless-stopped

  # Code Crafter (Dwarf Servant)
  code_crafter:
    build: .
    container_name: code_crafter
    command: ["python", "-m", "elder_tree.servants.dwarf_servant"]
    environment:
      - DB_URL=postgresql://elder_tree:${POSTGRES_PASSWORD:-elder_tree_secret}@postgres:5432/elder_tree_db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secret}@redis:6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    depends_on:
      - knowledge_sage
      - task_sage
      - incident_sage
      - rag_sage
    networks:
      - elder_tree_network
    restart: unless-stopped

  # OpenTelemetry Collector
  otel_collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: elder_tree_otel
    command: ["--config=/etc/otel/config.yaml"]
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel/config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8888:8888"   # Prometheus metrics
    depends_on:
      - prometheus
    networks:
      - elder_tree_network

volumes:
  postgres_data:
  redis_data:
  consul_data:
  prometheus_data:
  grafana_data:
  chroma_data:

networks:
  elder_tree_network:
    driver: bridge