[tool.poetry]
name = "elder-tree"
version = "2.0.0"
description = "Elder Tree with python-a2a (OSS First + TDD/XP)"
authors = ["Claude Elder <claude@elders-guild.ai>"]
readme = "README.md"
packages = [{include = "elder_tree", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"

# 実在のOSS: python-a2a
python-a2a = "^0.5.9"

# Web/API (OSS)
fastapi = "^0.104.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"

# データベース (OSS)
sqlmodel = "^0.0.14"
asyncpg = "^0.29.0"
redis = "^5.0.1"
alembic = "^1.13.0"

# AI/LLM統合 (OSS)
anthropic = "^0.7.0"
openai = "^1.0.0"
langchain = "^0.1.0"

# 監視・ログ (OSS)
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"

# サービスディスカバリ (OSS)
python-consul = "^1.1.0"

# ユーティリティ (OSS)
httpx = "^0.25.0"
python-multipart = "^0.0.6"
pyyaml = "^6.0"

[tool.poetry.group.dev.dependencies]
# TDD必須ツール
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"

# 拡張テストツール (OSS)
pytest-bdd = "^6.1.1"
pytest-benchmark = "^4.0.0"
pytest-timeout = "^2.2.0"
pytest-docker = "^2.0.1"
hypothesis = "^6.92.1"
faker = "^22.0.0"
factory-boy = "^3.3.0"
responses = "^0.24.1"

# 品質ツール (OSS)
black = "^23.11.0"
ruff = "^0.1.6"
mypy = "^1.7.0"
isort = "^5.13.0"

# 開発支援
ipython = "^8.18.0"
rich = "^13.7.0"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
asyncio_mode = "auto"
pythonpath = ["src"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=elder_tree",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
select = ["E", "F", "I", "N", "W", "B", "Q"]
ignore = ["E501"]
target-version = "py39"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.isort]
profile = "black"
line_length = 88

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
