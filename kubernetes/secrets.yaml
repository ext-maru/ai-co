apiVersion: v1
kind: Secret
metadata:
  name: elder-flow-secrets
  namespace: elder-flow
type: Opaque
stringData:
  # Database credentials
  POSTGRES_USER: elderflow
  POSTGRES_PASSWORD: "CHANGE_ME_IN_PRODUCTION"

  # Redis password (if enabled)
  REDIS_PASSWORD: ""

  # JWT Secret
  JWT_SECRET: "CHANGE_ME_TO_SECURE_RANDOM_STRING"

  # API Keys
  OPENAI_API_KEY: "YOUR_OPENAI_API_KEY"

  # Admin credentials
  ADMIN_USERNAME: admin
  ADMIN_PASSWORD: "CHANGE_ME_IN_PRODUCTION"

  # Grafana admin password
  GRAFANA_PASSWORD: "CHANGE_ME_IN_PRODUCTION"

  # SMTP Configuration (for notifications)
  SMTP_HOST: smtp.gmail.com
  SMTP_PORT: "587"
  SMTP_USERNAME: "your-email@gmail.com"
  SMTP_PASSWORD: "your-app-password"

  # Enterprise Authentication (optional)
  LDAP_URL: "ldap://ldap.example.com"
  LDAP_BIND_DN: "cn=admin,dc=example,dc=com"
  LDAP_BIND_PASSWORD: "ldap-password"

  SAML_IDP_URL: "https://idp.example.com/saml"
  SAML_IDP_CERT: |
    -----BEGIN CERTIFICATE-----
    MIIDXTCCAkWgAwIBAgIJAL...
    -----END CERTIFICATE-----

---
apiVersion: v1
kind: Secret
metadata:
  name: elder-flow-tls
  namespace: elder-flow
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and key
  # Generate with: kubectl create secret tls elder-flow-tls --cert=path/to/cert.pem --key=path/to/key.pem
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t
