#!/usr/bin/env python3
"""
AI Command Helper - コマンド実行支援ツール
"""

import os
import subprocess
from pathlib import Path
import json
from datetime import datetime

class AICommandHelper:
    """AI Commandシステムのヘルパークラス"""
    
    def __init__(self):
        self.commands_dir = Path('/home/aicompany/ai_co/ai_commands')
        self.commands_dir.mkdir(exist_ok=True)
        
    def create_bash_command(self, script_content, command_name):
        """bashコマンドを作成"""
        command_file = self.commands_dir / f"{command_name}.sh"
        
        # スクリプトファイルを作成
        with open(command_file, 'w') as f:
            f.write("#!/bin/bash\n")
            f.write(f"# Auto-generated by AI Command Helper at {datetime.now()}\n\n")
            f.write(script_content)
        
        # 実行権限を付与
        os.chmod(command_file, 0o755)
        
        # コマンドエイリアスを登録
        alias_file = self.commands_dir / 'aliases.sh'
        with open(alias_file, 'a') as f:
            f.write(f"\nalias {command_name}='bash {command_file}'")
        
        print(f"✅ コマンド '{command_name}' を作成しました")
        print(f"   実行: {command_name}")
        
        return str(command_file)
    
    def execute_command(self, command_name):
        """登録されたコマンドを実行"""
        command_file = self.commands_dir / f"{command_name}.sh"
        
        if not command_file.exists():
            print(f"❌ コマンド '{command_name}' が見つかりません")
            return False
        
        print(f"🔧 実行中: {command_name}")
        result = subprocess.run(['bash', str(command_file)], capture_output=True, text=True)
        
        if result.stdout:
            print(result.stdout)
        if result.stderr:
            print(f"⚠️ エラー: {result.stderr}")
        
        return result.returncode == 0
    
    def list_commands(self):
        """登録されたコマンド一覧を表示"""
        commands = list(self.commands_dir.glob('*.sh'))
        
        if not commands:
            print("登録されたコマンドはありません")
            return
        
        print("📋 登録されたコマンド:")
        for cmd in commands:
            print(f"  - {cmd.stem}")
