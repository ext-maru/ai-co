# エルフの森 協調設定ファイル
# 🧝‍♂️ タスクエルダー + エルフ協調システム

forest_configuration:
  name: "画像アップロードシステムテスト修正"
  batch_id: "test_fix_batch_20250710_030000"
  
elf_assignments:
  # 🌿 森の癒し (最適化・改善)
  optimization_elves:
    - task: "fix_models_py"
      elves: 2
      focus: "データベースモデル最適化"
      
    - task: "fix_google_drive_service"
      elves: 3
      focus: "API統合とメソッド実装"
      
  # 🦋 生態系維持 (継続監視)
  monitoring_elves:
    - task: "test_environment_health"
      elves: 1
      focus: "テスト環境の健全性監視"
      
  # 🌱 新芽育成 (テスト・品質向上)
  quality_elves:
    - task: "coverage_improvement"
      elves: 2
      focus: "カバレッジ67%→80%向上"
      
parallel_execution_plan:
  phase_1:
    duration_minutes: 15
    tasks:
      - id: "fix_models_py"
        servants: 2
        command: |
          # server_default追加
          sed -i 's/created_at = db.Column(db.DateTime/created_at = db.Column(db.DateTime, nullable=False, server_default=func.now()/' app/models.py
          # __repr__メソッド実装
          python3 -c "
          import re
          with open('app/models.py', 'r') as f: content = f.read()
          # Customer __repr__
          content = re.sub(r'(class Customer.*?)(class|\Z)', 
            lambda m: m.group(1) + '\n    def __repr__(self):\n        return f\"<Customer {self.id}: {self.name}>\"\n\n' + (m.group(2) if m.group(2) else ''), 
            content, flags=re.DOTALL)
          # 同様にCustomerImage, SystemConfigも処理
          with open('app/models.py', 'w') as f: f.write(content)
          "
          
      - id: "fix_google_drive_service"
        servants: 3
        command: |
          # MediaFileUploadインポート追加
          sed -i '1a from googleapiclient.http import MediaFileUpload' app/google_drive_service.py
          # create_folder, upload_fileメソッド実装（詳細は指示書参照）
          
      - id: "fix_test_environment"
        servants: 1
        command: |
          pip install pytest-mock --break-system-packages
          # conftest.py更新
          
  phase_2:
    duration_minutes: 10
    dependencies: ["fix_models_py"]
    tasks:
      - id: "fix_app_routes"
        servants: 2
        command: |
          # EXIF処理とエラーハンドリング修正
          
quality_gates:
  - gate: "unit_test_pass"
    condition: "all_tests_pass == true"
    
  - gate: "coverage_check"
    condition: "coverage >= 67"
    
  - gate: "no_regression"
    condition: "new_failures == 0"
    
reporting:
  auto_generate: true
  recipients:
    - "elder_council"
    - "claude_elder"
    - "task_sage"
    
  format: |
    ## タスクエルダー実行報告
    - バッチID: {batch_id}
    - 実行時間: {execution_time}
    - 成功タスク: {success_count}/{total_count}
    - テスト結果: {test_results}
    - カバレッジ: {coverage}%
    
rollback_strategy:
  enabled: true
  trigger: "any_task_failure"
  method: "git_restore"