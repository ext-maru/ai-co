# pytest設定ファイル（OSS移行版） - エルダーズギルドOSS移行プロジェクト
# Issue #93: OSS移行実装プロジェクト
# 作成日: 2025年7月19日

[tool:pytest]
# テストファイルのパターン
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 出力設定（OSS移行版強化）
addopts = 
    -v                          # 詳細出力
    --strict-markers            # 未定義マーカーを禁止
    --tb=short                  # トレースバックを短縮表示
    --cov=libs                  # libsディレクトリのカバレッジ測定
    --cov=workers               # workersディレクトリのカバレッジ測定
    --cov-report=html           # HTMLカバレッジレポート生成
    --cov-report=term-missing   # ターミナルに未カバー行を表示
    --cov-report=xml            # XML形式レポート（SonarQube連携用）
    --cov-fail-under=80         # カバレッジ80%未満で失敗
    -p no:warnings              # 警告を非表示
    --maxfail=3                 # 3つ失敗したら停止
    --durations=10              # 遅いテスト10個を表示
    --junit-xml=test-results.xml # JUnit形式のレポート出力

# 非同期テスト設定
asyncio_mode = auto

# マーカー定義（OSS移行版拡張）
markers =
    slow: 実行に時間がかかるテスト (deselect with '-m "not slow"')
    integration: 統合テスト
    unit: ユニットテスト
    e2e: エンドツーエンドテスト
    smoke: スモークテスト
    elder_servant: エルダーサーバント関連テスト
    four_sages: 4賢者システムテスト
    elder_flow: Elder Flow関連テスト
    iron_will: Iron Will品質基準テスト
    oss_migration: OSS移行関連テスト
    performance: パフォーマンステスト
    security: セキュリティテスト

# タイムアウト設定
timeout = 300
timeout_method = thread

# テスト実行並列化設定（pytest-xdist）
# -n auto: CPUコア数に応じて自動並列化
# 使用例: pytest -n auto

# カバレッジ設定
[coverage:run]
branch = True
source = .
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */.pytest_cache/*
    */migrations/*
    */config/*
    setup.py
    */.tox/*
    */htmlcov/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov
skip_empty = True
title = エルダーズギルド OSS移行 カバレッジレポート

[coverage:xml]
output = coverage.xml

# ログ設定
[tool:pytest:logging]
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# 環境変数設定
[tool:pytest:env]
TESTING = true
AI_COMPANY_ENV = test
PYTEST_CURRENT_TEST = true