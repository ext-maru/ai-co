#!/usr/bin/env python3
"""
Todo Sync Command - 手動でTodoListとPostgreSQLを同期
"""

import asyncio
import sys
from pathlib import Path

# プロジェクトルートをパスに追加
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from libs.todo_tracker_integration import TodoTrackerIntegration


async def main():
    """手動同期実行"""
    print("🔄 Todo同期を開始します...")
    
    # ユーザーIDを環境変数から取得
    import os
    user_id = os.environ.get("CLAUDE_ELDER_USER", "claude_elder")
    
    try:
        # 統合システムを初期化（自動同期無効）
        integration = TodoTrackerIntegration(
            auto_sync=False,
            user_id=user_id
        )
        await integration.initialize()
        
        # 現在のTodoリストを表示
        current_todos = integration.get_current_todos()
        if current_todos:
            print(f"\n📋 現在のTodoリスト ({len(current_todos)}件):")
            for todo in current_todos[:5]:
                status_emoji = {
                    "pending": "📋",
                    "in_progress": "🔄", 
                    "completed": "✅"
                }.get(todo.get("status", "pending"), "❓")
                print(f"   {status_emoji} {todo.get('content', 'No content')}")
            if len(current_todos) > 5:
                print(f"   ... 他 {len(current_todos) - 5} 件")
        
        # 同期確認
        print("\n🔄 PostgreSQLと同期しますか？ [Y/n]: ", end="", flush=True)
        choice = input().strip().lower()
        
        if choice != 'n':
            # 双方向同期を実行
            print("\n⚡ 同期中...")
            await integration.sync_both_ways(personal_only=True)
            
            # 同期結果を表示
            sync_status = await integration.get_sync_status()
            print("\n✅ 同期完了!")
            print(f"   📊 Todo数: {sync_status['todo_count']}")
            print(f"   📋 待機中: {sync_status['my_tasks_stats']['pending']}")
            print(f"   🔄 実行中: {sync_status['my_tasks_stats']['in_progress']}")
            print(f"   ✅ 完了: {sync_status['my_tasks_stats']['completed']}")
        else:
            print("\n❌ 同期をキャンセルしました")
        
        # クリーンアップ
        if integration.tracker:
            await integration.tracker.close()
            
    except Exception as e:
        print(f"\n❌ エラー: {e}")
        sys.exit(1)


if __name__ == "__main__":
    asyncio.run(main())