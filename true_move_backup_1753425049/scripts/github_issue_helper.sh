#!/bin/bash
# GitHub Issue Helper Script for Elder Guild
# Sub Issue管理とコメント閲覧の便利コマンド

set -e

# 色定義
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# ヘルプ表示
show_help() {
    echo -e "${CYAN}🏛️ GitHub Issue Helper for Elder Guild${NC}"
    echo ""
    echo "使用方法:"
    echo -e "  ${GREEN}./github_issue_helper.sh <command> [options]${NC}"
    echo ""
    echo "コマンド:"
    echo -e "  ${YELLOW}view <issue_number>${NC}        - Issue詳細表示"
    echo -e "  ${YELLOW}master <issue_number>${NC}      - Master Issue進捗ダッシュボード"
    echo -e "  ${YELLOW}comments <issue_number>${NC}    - コメント一覧表示"
    echo -e "  ${YELLOW}create-sub <master_id> <title>${NC} - Sub Issue作成"
    echo -e "  ${YELLOW}close-sub <issue_number>${NC}   - Sub Issue完了"
    echo -e "  ${YELLOW}update-master <master_id>${NC}  - Master Issue進捗更新"
    echo -e "  ${YELLOW}sage-status${NC}                - 4賢者システム状態確認"
    echo ""
    echo "例:"
    echo -e "  ${GREEN}./github_issue_helper.sh view 7${NC}"
    echo -e "  ${GREEN}./github_issue_helper.sh master 7${NC}"
    echo -e "  ${GREEN}./github_issue_helper.sh create-sub 7 '🧙‍♂️ テスト機能実装'${NC}"
}

# Issue詳細表示
view_issue() {
    local issue_number=$1
    echo -e "${CYAN}🔍 Issue #${issue_number} 詳細表示${NC}"
    python3 scripts/github_issue_dashboard.py "$issue_number"
}

# Master Issue進捗ダッシュボード
master_dashboard() {
    local master_issue=$1
    echo -e "${PURPLE}🏛️ Master Issue進捗ダッシュボード${NC}"
    python3 scripts/github_issue_dashboard.py master "$master_issue"
}

# コメント一覧表示
view_comments() {
    local issue_number=$1
    echo -e "${BLUE}💬 Issue #${issue_number} コメント一覧${NC}"
    gh issue view "$issue_number" --comments
}

# Sub Issue作成
create_sub_issue() {
    local master_id=$1
    local title=$2

    echo -e "${GREEN}📝 Sub Issue作成中...${NC}"

    # 4賢者システムの担当を判定
    local sage_type=""
    local sage_emoji=""

    if [[ "$title" =~ "Knowledge"||"知識"||"ナレッジ" ]]; then
        sage_type="knowledge-sage"
        sage_emoji="📚"
    elif [[ "$title" =~ "Task"||"タスク"||"進捗" ]]; then
        sage_type="task-sage"
        sage_emoji="📋"
    elif [[ "$title" =~ "Incident"||"インシデント"||"エラー" ]]; then
        sage_type="incident-sage"
        sage_emoji="🚨"
    elif [[ "$title" =~ "RAG"||"検索"||"情報" ]]; then
        sage_type="rag-sage"
        sage_emoji="🔍"
    fi

    # Sub Issue作成
    gh issue create \
        --title "$title" \
        --body "# $sage_emoji Sub Issue

## 🎯 目的
Master Issue #${master_id} のサブタスク実装

## 📋 タスク
- [ ] 要件定義
- [ ] 設計
- [ ] 実装
- [ ] テスト
- [ ] 完了確認

## 🔗 関連
- Parent Issue: #${master_id}
- 担当: $sage_emoji $sage_type

## 📊 成功指標
- 品質基準: 95%以上
- テストカバレッジ: 90%以上
- 完了期限: 設定待ち

🤖 Auto-generated by Elder Guild Helper" \
        --label "$sage_type,sub-issue"
}

# Sub Issue完了
close_sub_issue() {
    local issue_number=$1

    echo -e "${GREEN}✅ Sub Issue #${issue_number} 完了処理中...${NC}"

    gh issue close "$issue_number" --comment "✅ **Sub Issue完了**

## 📊 最終結果
Sub Issue完了により、Master Issueの進捗が更新されました。

## 🔄 次のステップ
関連するSub Issueの実行を開始してください。

🤖 Auto-closed by Elder Guild Helper"
}

# Master Issue進捗更新
update_master_progress() {
    local master_id=$1

    echo -e "${YELLOW}📊 Master Issue #${master_id} 進捗更新中...${NC}"

    # 関連Sub Issueの状態を取得
    local total_subs=$(gh issue list --label "sub-issue" --json number,state | jq length)
    local completed_subs=$(gh issue list --label "sub-issue" --state closed --json number | jq length)

    local progress=0
    if [ "$total_subs" -gt 0 ]; then
        progress=$((completed_subs * 100 / total_subs))
    fi

    # Master Issueに進捗コメント追加
    gh issue comment "$master_id" --body "📊 **自動進捗更新**

## 📈 現在の進捗
- 総Sub Issue数: $total_subs
- 完了Sub Issue数: $completed_subs
- 進捗率: $progress%

## 🔄 更新日時
$(date '+%Y-%m-%d %H:%M:%S')

🤖 Auto-updated by Elder Guild Helper"
}

# 4賢者システム状態確認
sage_status() {
    echo -e "${PURPLE}🧙‍♂️ 4賢者システム状態確認${NC}"

    echo -e "${BLUE}📚 Knowledge Sage:${NC}"
    gh issue list --label "knowledge-sage" --json number,title,state

    echo -e "${BLUE}📋 Task Sage:${NC}"
    gh issue list --label "task-sage" --json number,title,state

    echo -e "${BLUE}🚨 Incident Sage:${NC}"
    gh issue list --label "incident-sage" --json number,title,state

    echo -e "${BLUE}🔍 RAG Sage:${NC}"
    gh issue list --label "rag-sage" --json number,title,state
}

# メイン処理
main() {
    case "${1:-help}" in
        "view")
            view_issue "$2"
            ;;
        "master")
            master_dashboard "$2"
            ;;
        "comments")
            view_comments "$2"
            ;;
        "create-sub")
            create_sub_issue "$2" "$3"
            ;;
        "close-sub")
            close_sub_issue "$2"
            ;;
        "update-master")
            update_master_progress "$2"
            ;;
        "sage-status")
            sage_status
            ;;
        "help"|*)
            show_help
            ;;
    esac
}

main "$@"
